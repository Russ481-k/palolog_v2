// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = []
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountStatus {
  // User has registered and verified their email
  ENABLED
  // User has been disabled and can't login anymore
  DISABLED
  // User did register, but has not verified their email yet.
  NOT_VERIFIED
}

enum UserRole {
  APP
  ADMIN
}

model User {
  id             String        @id
  password       String        @default("000000")
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  name           String?
  email          String?       @unique
  accountStatus  AccountStatus @default(NOT_VERIFIED)
  image          String?
  authorizations UserRole[]    @default([APP])
  language       String        @default("en")
  lastLoginAt    DateTime?
}

model VerificationToken {
  userId        String
  token         String   @unique
  expires       DateTime
  lastAttemptAt DateTime @updatedAt
  attempts      Int      @default(0)
  // Useful to change the user email. This model will contains the next user
  // email, waiting for the user to validate it.
}

model Repository {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @unique
  link        String
  description String?
}

model Project {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @unique
  description String?
}

model Menu {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  columns     MenuColumn[]
  description String?

}

model Column {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  menus       MenuColumn[]
  description String?
}

model MenuColumn {
  id            Int     @id @default(autoincrement())
  menuId        Int
  columnId      Int
  menu          Menu    @relation(fields: [menuId], references: [id])
  column        Column  @relation(fields: [columnId], references: [id])
  
  @@unique([menuId, columnId])
}